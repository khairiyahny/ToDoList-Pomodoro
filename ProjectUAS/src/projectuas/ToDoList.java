/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package projectuas;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Khairiyah N Y M (222011626)
 */
public class ToDoList extends javax.swing.JPanel {

    private JScrollPane contentScrollPane;
    
    /**
     * Creates new form ToDoList
     * @param contentScrollPane
     */
    public ToDoList(JScrollPane contentScrollPane) {
        initComponents();
        this.contentScrollPane = contentScrollPane;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        deadlinejDateChooser1 = new com.toedter.calendar.JDateChooser();
        tampilStartjButton2 = new javax.swing.JButton();
        taskjLabel3 = new javax.swing.JLabel();
        dljLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        notesjTextField2 = new javax.swing.JTextField();
        taskjTextField1 = new javax.swing.JTextField();
        tambahjButton1 = new javax.swing.JButton();
        KembalijButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(500, 500));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Notes");
        add(jLabel1);
        jLabel1.setBounds(310, 440, 160, 19);

        deadlinejDateChooser1.setDateFormatString("dd-MM-yyyy");
        add(deadlinejDateChooser1);
        deadlinejDateChooser1.setBounds(180, 459, 120, 30);

        tampilStartjButton2.setBackground(new java.awt.Color(247, 190, 0));
        tampilStartjButton2.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        tampilStartjButton2.setText("Tampilkan");
        tampilStartjButton2.setBorderPainted(false);
        tampilStartjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tampilStartjButton2ActionPerformed(evt);
            }
        });
        add(tampilStartjButton2);
        tampilStartjButton2.setBounds(580, 468, 110, 20);

        taskjLabel3.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        taskjLabel3.setForeground(new java.awt.Color(255, 255, 255));
        taskjLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        taskjLabel3.setText("Task");
        add(taskjLabel3);
        taskjLabel3.setBounds(10, 440, 160, 19);

        dljLabel4.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        dljLabel4.setForeground(new java.awt.Color(255, 255, 255));
        dljLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dljLabel4.setText("Deadline");
        add(dljLabel4);
        dljLabel4.setBounds(180, 440, 120, 19);

        jTable1.setBackground(new java.awt.Color(49, 57, 66));
        jTable1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task", "Deadline", "Notes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setShowGrid(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(10, 92, 680, 340);

        notesjTextField2.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        add(notesjTextField2);
        notesjTextField2.setBounds(310, 460, 160, 28);

        taskjTextField1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        taskjTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taskjTextField1ActionPerformed(evt);
            }
        });
        add(taskjTextField1);
        taskjTextField1.setBounds(10, 460, 160, 28);

        tambahjButton1.setBackground(new java.awt.Color(247, 190, 0));
        tambahjButton1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        tambahjButton1.setText("Tambah");
        tambahjButton1.setBorderPainted(false);
        tambahjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahjButton1ActionPerformed(evt);
            }
        });
        add(tambahjButton1);
        tambahjButton1.setBounds(480, 440, 90, 50);

        KembalijButton2.setBackground(new java.awt.Color(247, 190, 0));
        KembalijButton2.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        KembalijButton2.setText("Kembali");
        KembalijButton2.setBorderPainted(false);
        KembalijButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KembalijButton2ActionPerformed(evt);
            }
        });
        add(KembalijButton2);
        KembalijButton2.setBounds(580, 440, 110, 20);

        jLabel2.setIcon(new javax.swing.ImageIcon("D:\\4\\PBO (P)\\Project UAS\\ProjectUAS\\to do list.jpg")); // NOI18N
        jLabel2.setText("Task");
        add(jLabel2);
        jLabel2.setBounds(0, 0, 700, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void taskjTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taskjTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_taskjTextField1ActionPerformed

    private void tambahjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahjButton1ActionPerformed
        // TODO add your handling code here:
        try{ 
            if (taskjTextField1.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Task belum diisi");
            }
            else if (deadlinejDateChooser1.getDate()==null){
                JOptionPane.showMessageDialog(null, "Deadline belum diisi");
            }
            else{
                Database.getInstance().insertToDoList(simpan());
                loadTable();
                clearForm();
            }
        } catch (SQLException ex){
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal memuat kegiatan", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tambahjButton1ActionPerformed

    private void KembalijButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KembalijButton2ActionPerformed
        // TODO add your handling code here:
        contentScrollPane.setViewportView(new Home(contentScrollPane));
    }//GEN-LAST:event_KembalijButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        String task = dtm.getValueAt(i,0).toString();
        String deadline = dtm.getValueAt(i,1).toString();
        String notes = dtm.getValueAt(i,2).toString();
        
        contentScrollPane.setViewportView(new Detail(contentScrollPane));
        Detail.taskjLabel2.setText(task);
        Detail.deadlinejLabel3.setText(deadline);
        Detail.jTextArea1.setText(notes);
    }//GEN-LAST:event_jTable1MouseClicked

    private void tampilStartjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tampilStartjButton2ActionPerformed
        // TODO add your handling code here:
        loadTugas(Login.getUsername());
    }//GEN-LAST:event_tampilStartjButton2ActionPerformed

    private ToDoListClass simpan(){
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        ToDoListClass list = new ToDoListClass();
        list.setTask(taskjTextField1.getText());
        list.setDeadline(df.format(deadlinejDateChooser1.getDate()));
        list.setNotes(notesjTextField2.getText());
        list.setUser(Login.getUsername());
        return list;
    }
    
    private void loadTable(){ 
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel(); 
        dtm.addRow(new Object[]{
            taskjTextField1.getText(), df.format(deadlinejDateChooser1.getDate()), notesjTextField2.getText()
        });
    }
    
    private void clearForm(){
        taskjTextField1.setText("");
        deadlinejDateChooser1.setDate(null);
        notesjTextField2.setText("");
    }

    private void loadTugas(String user){
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel(); 
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        int i = 1;
        try{
            for(ToDoListClass p : Database.getInstance().getListTugas(user)){
                dtm.addRow(new Object[]{
                    p.getTask(), p.getDeadline(), p.getNotes()
                });
                i++;
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal memuat kegiatan", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton KembalijButton2;
    private com.toedter.calendar.JDateChooser deadlinejDateChooser1;
    private javax.swing.JLabel dljLabel4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTextField notesjTextField2;
    private javax.swing.JButton tambahjButton1;
    private javax.swing.JButton tampilStartjButton2;
    private javax.swing.JLabel taskjLabel3;
    private javax.swing.JTextField taskjTextField1;
    // End of variables declaration//GEN-END:variables
}
